---
# CI Integration
image: python:3.7-buster

stages:
  - lint
  - build
  - tests
  - deploy

before_script:
  - pip install --cache-dir .pip/ --requirement requirements.txt

variables:
  DEBUG_SPHINX: 0
  DEBUG_SONAR: 0
  DEBUG_FLAKE8: 0

tests:
  stage: tests
  before_script:
    - pip --cache-dir .pip/ install --requirement requirements.txt
    - pip --cache-dir .pip/ install --requirement requirements-tests.txt
  script: |
    export PYTHONPATH=${PYTHONPATH}:.
    pytest --cov=bump_release ./tests
  cache:
    paths:
      - .pip/
  tags:
    - python3.7
    - docker

# Checks python code against flake8
flake8:
  stage: lint
  before_script:
    - pip --cache-dir .pip/ install flake8
  script: |
    [[ ${DEBUG_FLAKE8} -eq 1 ]] && ls -la
    flake8 ./bump_release
  tags:
    - python3.7
    - docker

# Builds sphinx docs
pages:
  stage: build
  before_script:
    - pip --cache-dir .pip/ install --requirement requirements.txt
    - pip --cache-dir .pip/ install --requirement requirements-docs.txt
  script: |
    cd ./docs
    make html
    # Copy built files to /public
    mv build/html/ ../public/
  artifacts:
    paths:
      - public
  cache:
    paths:
      - .pip/
  tags:
    - python3.7
    - docker

release_staging:
  stage: deploy
  before_script:
    - pip --cache-dir .pip/ install -r requirements-deploy.txt
  script: |
    python3 setup.py sdist bdist_wheel
    python3 -m twine upload \
      --repository-url https://test.pypi.org/legacy/ \
      --username "$USERNAME_STAGING" \
      --password "$PASSWORD_STAGING" \
      --skip-existing \
      dist/*
  cache:
    paths:
      - .pip/
  tags:
    - python3.7
    - docker

release:
  stage: deploy
  before_script:
    - pip --cache-dir .pip/ install -r requirements-deploy.txt
  script: |
    python3 setup.py sdist bdist_wheel
    python3 -m twine upload \
      --username "$USERNAME" \
      --password "$PASSWORD" \
      --skip-existing \
      dist/*
  cache:
    paths:
      - .pip/
  tags:
    - python3.7
    - docker
  rules:
    - if: $CI_COMMIT_TAG != null
